```@meta
CurrentModule = Antique
```

# Harmonic Oscillator

The harmonic oscillator is the most frequently used model in quantum physics.

## Definitions

This model is described with the time-independent Schrödinger equation
```math
  \hat{H} \psi(x) = E \psi(x),
```
and the Hamiltonian
```math
  \hat{H} = - \frac{\hbar^2}{2m} \frac{\mathrm{d}^2}{\mathrm{d}x ^2} + V(x).
```
Parameters are specified with the following struct.

#### Parameters
```@docs; canonical=false
Antique.HarmonicOscillator
```

#### Potential
```@docs; canonical=false
Antique.V(::HarmonicOscillator, ::Any)
```

#### Eigen Values
```@docs; canonical=false
Antique.E(::HarmonicOscillator)
```

#### Eigen Functions
```@docs; canonical=false
Antique.ψ(::HarmonicOscillator, ::Any)
```

#### Hermite Polynomials
```@docs; canonical=false
Antique.H(::HarmonicOscillator, ::Any)
```

#### Reference
- [DLMF 18.5.18](https://dlmf.nist.gov/18.5#E18)
- [cpprefjp](https://cpprefjp.github.io/reference/cmath/hermite.html)
- The Digital Library of Mathematical Functions (DLMF)                                                    [18.3 Table1](https://dlmf.nist.gov/18.3#T1), [18.5 Table1](https://dlmf.nist.gov/18.5#T1), [18.5.13](https://dlmf.nist.gov/18.5#E13), [18.5.18](https://dlmf.nist.gov/18.5#E18)
- L. D. Landau, E. M. Lifshitz, Quantum Mechanics (Pergamon Press, 1965)                                  [p.595 (a.4), (a.6)](https://archive.org/details/ost-physics-landaulifshitz-quantummechanics/page/n607/mode/2up)
- L. I. Schiff, Quantum Mechanics (McGraw-Hill Book Company, 1968)                                        [p.71 (13.12)](https://archive.org/details/ost-physics-schiff-quantummechanics/page/n87/mode/2up)
- A. Messiah, Quanfum Mechanics (Dover Publications, 1999)                                                [p.491 (B.59)](https://archive.org/details/quantummechanics0000mess/page/491/mode/1up)
- W. Greiner, Quantum Mechanics: An Introduction Third Edition (Springer, 1994)                           [p.152 (7.22)](https://archive.org/details/quantummechanics0001grei_u4x0/page/152/mode/1up)
- D. J. Griffiths, Introduction to Quantum Mechanics (Prentice Hall, 1995)                                [p.41 Table 2.1](https://archive.org/details/griffiths-introduction-to-quantum-mechanics/page/41/mode/1up), [p.43 (2.70)](https://archive.org/details/griffiths-introduction-to-quantum-mechanics/page/43/mode/1up)
- D. A. McQuarrie, J. D. Simon, Physical Chemistry: A Molecular Approach (University Science Books, 1997) [p.170 Table 5.2](https://archive.org/details/McQuarrieSimonPhysicalChemistrySolutions/McQuarrie_Simon_Physical_Chemistry1997/page/n193/mode/1up)
- P. W. Atkins, J. De Paula, Atkins' Physical Chemistry, 8th edition (W. H. Freeman, 2008)                [p.293 Table 9.1](https://archive.org/details/atkinsphysicalch00pwat/page/292/mode/2up)
- J. J. Sakurai, J. Napolitano, Modern Quantum Mechanics Third Edition (Cambridge University Press, 2021) [p.524 (B.29)](https://doi.org/10.1017/9781108587280)

## Usage & Examples

[Install Antique.jl](@ref Install) for the first use and run `using Antique` before each use. The energy `E()`, wavefunction `ψ()`, potential `V()` and some other functions are suppoted. In this system, the model is generated by `HarmonicOscillator` and several parameters `k`, `m` and `ℏ` are set as optional arguments.

```julia; cache = :all; results = "hidden"
using Antique
HO = HarmonicOscillator(k=1.0, m=1.0, ℏ=1.0)
```

Parameters:

```julia; term = true
HO.k
HO.m
HO.ℏ
```

Eigen values:

```julia; term = true
E(HO, n=0)
E(HO, n=1)
```

Potential energy curve:

```julia
using Plots
plot(-5:0.1:5, x -> V(HO, x), lw=2, label="", xlabel="x", ylabel="V(x)")
```

Wave functions:

```julia
using Plots
plot(xlim=(-5,5), xlabel="x", ylabel="ψ(x)")
plot!(x -> ψ(HO, x, n=0), label="n=0", lw=2)
plot!(x -> ψ(HO, x, n=1), label="n=1", lw=2)
plot!(x -> ψ(HO, x, n=2), label="n=2", lw=2)
plot!(x -> ψ(HO, x, n=3), label="n=3", lw=2)
plot!(x -> ψ(HO, x, n=4), label="n=4", lw=2)
```

Potential energy curve, Energy levels, Wave functions:

```julia
using Plots
plot(xlim=(-5.5,5.5), ylim=(-0.2,5.4), xlabel="\$x\$", ylabel="\$V(x),~E_n,~\\psi_n(x)\\times0.5+E_n\$", size=(480,400), dpi=300)
for n in 0:4
  # energy
  hline!([E(HO, n=n)], lc=:black, ls=:dash, label="")
  plot!([-sqrt(2*HO.k*E(HO, n=n)),sqrt(2*HO.k*E(HO, n=n))], fill(E(HO, n=n),2), lc=:black, lw=2, label="")
  # wave function
  plot!(x -> E(HO, n=n) + 0.5*ψ(HO, x,n=n), lc=n+1, lw=2, label="")
end
# potential
plot!(x -> V(HO, x), lc=:black, lw=2, label="")
```

## Testing

Unit testing and Integration testing were done using computer algebra system ([Symbolics.jl](https://symbolics.juliasymbolics.org/stable/)) and numerical integration ([QuadGK.jl](https://juliamath.github.io/QuadGK.jl/stable/)). The test script is [here](https://github.com/ohno/Antique.jl/blob/main/test/HarmonicOscillator.jl).

```julia; line_width = 500
println(Antique.load("../../test/result/HarmonicOscillator.log"))
```
